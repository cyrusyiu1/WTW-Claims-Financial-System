[{"/Users/cyrusyiu/new-WTW/WTW-Claims-Financial-System/Client/src/index.tsx":"1","/Users/cyrusyiu/new-WTW/WTW-Claims-Financial-System/Client/src/reportWebVitals.ts":"2","/Users/cyrusyiu/new-WTW/WTW-Claims-Financial-System/Client/src/App.tsx":"3","/Users/cyrusyiu/new-WTW/WTW-Claims-Financial-System/Client/src/redux/store.ts":"4","/Users/cyrusyiu/new-WTW/WTW-Claims-Financial-System/Client/src/redux/reducer.ts":"5","/Users/cyrusyiu/new-WTW/WTW-Claims-Financial-System/Client/src/pages/AdminPage.tsx":"6","/Users/cyrusyiu/new-WTW/WTW-Claims-Financial-System/Client/src/pages/Home.tsx":"7","/Users/cyrusyiu/new-WTW/WTW-Claims-Financial-System/Client/src/pages/PolicyPage.tsx":"8","/Users/cyrusyiu/new-WTW/WTW-Claims-Financial-System/Client/src/pages/LoginPage.tsx":"9","/Users/cyrusyiu/new-WTW/WTW-Claims-Financial-System/Client/src/pages/RegisterPage.tsx":"10","/Users/cyrusyiu/new-WTW/WTW-Claims-Financial-System/Client/src/redux/enhancer.ts":"11","/Users/cyrusyiu/new-WTW/WTW-Claims-Financial-System/Client/src/redux/auth/reducer.ts":"12","/Users/cyrusyiu/new-WTW/WTW-Claims-Financial-System/Client/src/components/Policy.tsx":"13","/Users/cyrusyiu/new-WTW/WTW-Claims-Financial-System/Client/src/components/Register.tsx":"14","/Users/cyrusyiu/new-WTW/WTW-Claims-Financial-System/Client/src/components/Sidebar.tsx":"15","/Users/cyrusyiu/new-WTW/WTW-Claims-Financial-System/Client/src/components/Admin.tsx":"16","/Users/cyrusyiu/new-WTW/WTW-Claims-Financial-System/Client/src/components/Login.tsx":"17","/Users/cyrusyiu/new-WTW/WTW-Claims-Financial-System/Client/src/env.ts":"18","/Users/cyrusyiu/new-WTW/WTW-Claims-Financial-System/Client/src/redux/auth/action.ts":"19","/Users/cyrusyiu/new-WTW/WTW-Claims-Financial-System/Client/src/components/PolicyList.tsx":"20"},{"size":554,"mtime":1677809465921,"results":"21","hashOfConfig":"22"},{"size":425,"mtime":1677809465922,"results":"23","hashOfConfig":"22"},{"size":1240,"mtime":1677809465921,"results":"24","hashOfConfig":"22"},{"size":199,"mtime":1677809465922,"results":"25","hashOfConfig":"22"},{"size":394,"mtime":1677809465922,"results":"26","hashOfConfig":"22"},{"size":224,"mtime":1677809465921,"results":"27","hashOfConfig":"22"},{"size":495,"mtime":1677809465921,"results":"28","hashOfConfig":"22"},{"size":219,"mtime":1677809465922,"results":"29","hashOfConfig":"22"},{"size":214,"mtime":1677809465921,"results":"30","hashOfConfig":"22"},{"size":229,"mtime":1677809465922,"results":"31","hashOfConfig":"22"},{"size":556,"mtime":1677809465922,"results":"32","hashOfConfig":"22"},{"size":1180,"mtime":1677809465922,"results":"33","hashOfConfig":"22"},{"size":2644,"mtime":1677809465921,"results":"34","hashOfConfig":"22"},{"size":2222,"mtime":1677809465921,"results":"35","hashOfConfig":"22"},{"size":758,"mtime":1677809465921,"results":"36","hashOfConfig":"22"},{"size":5290,"mtime":1677809465921,"results":"37","hashOfConfig":"22"},{"size":2389,"mtime":1677809465921,"results":"38","hashOfConfig":"22"},{"size":619,"mtime":1677809465921,"results":"39","hashOfConfig":"22"},{"size":268,"mtime":1677809465922,"results":"40","hashOfConfig":"22"},{"size":4870,"mtime":1677809465921,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"becszk",{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},"/Users/cyrusyiu/new-WTW/WTW-Claims-Financial-System/Client/src/index.tsx",[],[],"/Users/cyrusyiu/new-WTW/WTW-Claims-Financial-System/Client/src/reportWebVitals.ts",[],[],"/Users/cyrusyiu/new-WTW/WTW-Claims-Financial-System/Client/src/App.tsx",["111","112"],[],"import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Home from './pages/Home';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { Route } from 'react-router-dom';\nimport { Switch } from 'react-router';\nimport { ConnectedRouter } from 'connected-react-router'\nimport { history } from './redux/reducer';\nimport PolicyList from './components/PolicyList';\nimport LoginPage from './pages/LoginPage';\nimport AdminPage from './pages/AdminPage';\nimport PolicyPage from './pages/PolicyPage';\nimport RegisterPage from './pages/RegisterPage';\n\nfunction App() {\n  \n  return (\n    <Provider store = {store}>\n      <ConnectedRouter history={history}>\n      <div className=\"App\">\n        <Switch>\n          {/* <Home></Home> */}\n          <Route path=\"/\" exact={true} component={Home} />\n          <Route path=\"/register\" component={RegisterPage} />\n          <Route path=\"/login\" component={LoginPage} />\n          <Route path=\"/admin\" component={AdminPage} />\n          <Route path=\"/policy\" component={PolicyPage} />\n          {/* <Route path=\"/policyList\" component={PolicyList} /> */}\n        </Switch>\n      </div>\n      </ConnectedRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","/Users/cyrusyiu/new-WTW/WTW-Claims-Financial-System/Client/src/redux/store.ts",[],[],"/Users/cyrusyiu/new-WTW/WTW-Claims-Financial-System/Client/src/redux/reducer.ts",[],[],"/Users/cyrusyiu/new-WTW/WTW-Claims-Financial-System/Client/src/pages/AdminPage.tsx",[],[],"/Users/cyrusyiu/new-WTW/WTW-Claims-Financial-System/Client/src/pages/Home.tsx",["113","114","115","116"],[],"import React from 'react'\nimport Admin from '../components/Admin'\nimport Login from '../components/Login'\nimport Policy from '../components/Policy'\nimport Register from '../components/Register'\nimport Sidebar from '../components/Sidebar'\n\nexport default function Home() {\n  return (\n  <div style={{marginLeft:'20%'}}>\n    <Sidebar/>\n      <h1>WTW Claims Financial System</h1>\n      {/* <Register></Register>\n      <Login></Login>\n      <Admin></Admin>\n      <Policy></Policy> */}\n  </div>\n  )\n}\n","/Users/cyrusyiu/new-WTW/WTW-Claims-Financial-System/Client/src/pages/PolicyPage.tsx",[],[],"/Users/cyrusyiu/new-WTW/WTW-Claims-Financial-System/Client/src/pages/LoginPage.tsx",[],[],"/Users/cyrusyiu/new-WTW/WTW-Claims-Financial-System/Client/src/pages/RegisterPage.tsx",[],[],"/Users/cyrusyiu/new-WTW/WTW-Claims-Financial-System/Client/src/redux/enhancer.ts",["117"],[],"// import { routerMiddleware } from \"connected-react-router\";\nimport { applyMiddleware, compose } from \"redux\";\nimport thunk, { ThunkDispatch } from 'redux-thunk'\n// import { history } from \"./reducer\"\n\n\n\ndeclare global {\n    /* tslint:disable:interface-name */\n    interface Window {\n      __REDUX_DEVTOOLS_EXTENSION_COMPOSE__: any\n    }\n  }\n  \n  const composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n  \n  export let rootEnhancer = composeEnhancer(\n    // applyMiddleware(routerMiddleware(history)),\n    applyMiddleware(thunk),\n )","/Users/cyrusyiu/new-WTW/WTW-Claims-Financial-System/Client/src/redux/auth/reducer.ts",[],[],"/Users/cyrusyiu/new-WTW/WTW-Claims-Financial-System/Client/src/components/Policy.tsx",["118","119"],[],"import { unwatchFile } from 'fs';\nimport { env } from \"../env\";\nimport React, { useState,useEffect } from 'react'\nimport PolicyList from './PolicyList';\n\nexport default function Policy() {\n    const [policyNumber, setPolicyNumber] = useState(\"\");\n    const [policyType, setPolicyType] = useState('');\n    const [policyTerm, setPolicyTerm] = useState('');\n    const [coverageAmount, setCoverageAmount] = useState('');\n    const [premium, setPremium] = useState('');\n    const [allPolicy,setAllPolicy] = useState([{id:'',policy_number:'',policy_type:'',policy_term:'',coverage_amount:'',premium:''}])\n\n\n    const api_server = env.apiOrigin;\n\n    const submitPolicyApi = async () => {\n        const res = await fetch(`${api_server}/users/postPolicy`, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              // Authorization: `Bearer ${localStorage.getItem('token')}`\n            },\n            body: JSON.stringify({\n                policyNumber,\n                policyType,\n                policyTerm,\n                coverageAmount,\n                premium,\n            }),\n            \n          });\n        if(res.status === 200){\n            getAllPolicyApi()\n        }\n    }\n\n    const getAllPolicyApi = async () => {\n        const res = await fetch(`${api_server}/users/getAllPolicy`)\n        const result = await res.json()\n        setAllPolicy(result)\n    }\n    \n    const handleSubmitPolicy=(e:any)=>{\n        e.preventDefault()\n        submitPolicyApi()\n    }\n\n\n  return (\n    <div style={{marginLeft:'20%'}}>\n        <h1>Policy Manangement System</h1>\n        <form onSubmit={handleSubmitPolicy} style={{display:'flex',flexDirection:'column',alignItems:'center'}}>\n            <label> Policy number: </label>\n            <input type=\"text\" value={policyNumber} onChange={(e)=>setPolicyNumber(e.currentTarget.value)}/>\n            <label> Policy type: </label>\n            <input type=\"text\" value={policyType} onChange={(e)=>{setPolicyType(e.currentTarget.value)}}/>\n            <label> PolicyTerm: </label>\n            <input type=\"text\" value={policyTerm} onChange={(e)=>{setPolicyTerm(e.currentTarget.value)}}/>\n            <label> Coverage amount: </label>\n            <input type=\"text\" value={coverageAmount} onChange={(e)=>{setCoverageAmount(e.currentTarget.value)}}/>\n            <label> Premium: </label>\n            <input type=\"text\" value={premium} onChange={(e)=>{setPremium(e.currentTarget.value)}}/>\n            <input type=\"submit\" />\n        </form>\n        <PolicyList allPolicy={allPolicy} getAllPolicyApi={getAllPolicyApi}></PolicyList>\n    </div>\n  )\n}\n","/Users/cyrusyiu/new-WTW/WTW-Claims-Financial-System/Client/src/components/Register.tsx",["120","121","122"],[],"import React, { FormEvent, useContext, useEffect, useState } from 'react'\nimport { env } from \"../env\";\n\nexport default function Register() {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [usertype, setUsertype] = useState(\"\")\n\n    const api_server = env.apiOrigin;\n\n    const submitButton = (event: FormEvent) => {\n        event.preventDefault();\n        // let form = event.currentTarget as any\n        let user = {\n          username: username,\n          password: password,\n          usertype: usertype,\n        };\n        console.log('usertype',usertype)\n        console.log(username,password,usertype)\n        registerApi()\n      };\n    \n    const submitLogout = (event: FormEvent) => {\n        event.preventDefault();\n    };\n\n    const registerApi = async () =>{\n      const res = await fetch(`${api_server}/users/register`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          // Authorization: `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify({\n          username,\n          password,\n          usertype,\n        }),\n      });\n      // return res;\n      const result = await res.json()\n      if(res.status === 200){\n        localStorage.setItem('token', result)\n      }else{\n        console.log(result.message)\n      }\n    }\n\n    useEffect(()=>{\n    },[])\n\n  return (\n  <div style={{marginLeft:'20%'}}>\n    <h1 className=\"\">Register</h1>\n    <form className=\"block\">\n        <label> Username: </label>\n        <input type=\"text\" className=\"border-2 block text-center\" value={username} onChange={(e) => setUsername(e.currentTarget.value)}></input>\n        <label> Password: </label>\n        <input type=\"text\" className=\"border-2 block text-center\" value={password} onChange={(e) => setPassword(e.currentTarget.value)}></input>\n        <label htmlFor=\"\">Usertype: </label>\n        <select value={usertype} onChange={(e)=> setUsertype(e.currentTarget.value)} name=\"\" id=\"\">\n          <option value=\"Agent\">Agent</option>\n          <option value=\"Admin\">Admin</option>\n        </select>\n        <input type=\"submit\" onClick={submitButton}/> \n    </form>\n    </div>\n  )\n}\n","/Users/cyrusyiu/new-WTW/WTW-Claims-Financial-System/Client/src/components/Sidebar.tsx",["123"],[],"import React, { Children } from 'react'\nimport { Link } from 'react-router-dom'\nimport style from '../style/sidebar.module.css'\n\nexport default function Sidebar() {\n  return (\n    <div className={style.sidebar} style={{width:'20%'}}>\n      <div className={style.logo}>\n        <h2>WTW Claims Financial System</h2>\n      </div>\n      <div className={style.menu}>\n        <ul>\n            <li><Link to={\"/\"}>Home</Link></li>\n            <li><Link to={\"Register\"}>Register</Link></li>\n            <li><Link to={\"Login\"}>Login</Link></li>\n            <li><Link to={\"Admin\"}>Admin</Link></li>\n            <li><Link to={\"Policy\"}>Policy</Link></li>\n            {/* <li><Link to={\"PolicyList\"}>PolicyList</Link></li> */}\n        </ul>\n      </div>\n    </div>\n  )\n}\n","/Users/cyrusyiu/new-WTW/WTW-Claims-Financial-System/Client/src/components/Admin.tsx",["124","125","126","127","128","129"],[],"import React, { ReactElement, useEffect, useState } from 'react'\nimport { env } from \"../env\";\n\n\nexport default function Admin() {\n    const [allUser,setAllUser] = useState([{id:\"\",username:\"\",password:\"\",userType:\"\",permissionsLevel:0,authorityLevel:0}])\n    const [selectedUser, setSelectedUser] = useState(\"\");\n    const [selectedAuthorityUser, setSelectedAuthorityUser] = useState(\"\");\n    const [index,setIndex] = useState(\"0\")\n    const [authorityIndex,setAuthorityIndex] = useState(\"0\")\n    const [permissionsLevel, setPermissionsLevel] = useState(0)\n    const [authorityLevel, setAuthorityLevel] = useState(0)\n    const [random, setRandom] = useState(0)\n\n    const api_server = env.apiOrigin;\n\n    let url_string = window.location.href; //window.location.href\n    let url = new URL(url_string);\n    let id = url.searchParams.get(\"id\");\n\n    const allUsersInfoApi = async () => {\n        const res = await fetch(`${api_server}/users/getAllUsername`);\n        // return res;\n        const result = await res.json()\n        console.log(result)\n        setAllUser(result)\n        // set the initial username\n        setSelectedUser(result[0].username)\n        setSelectedAuthorityUser(result[0].username)\n        setRandom(Math.random() * 1000)\n    }\n\n    const changePermissionsApi = async () =>{\n      const res = await fetch(`${api_server}/users/permissions`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify({\n          username : selectedUser,\n          permissionsLevel,\n        }),\n      });\n      // const result = await res.json()\n      if(res.status === 200){\n        allUsersInfoApi()\n      }\n    }\n\n    const changeAuthoritysApi = async () => {\n      const res = await fetch(`${api_server}/users/authority`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify({\n          username : selectedAuthorityUser,\n          authorityLevel,\n        }),\n      });\n      // const result = await res.json()\n      if(res.status === 200){\n        allUsersInfoApi()\n      }\n    }\n\n    const changePermissionsLevel = (event:any) => {\n        const newValue = Number(event.target.value);\n        if (isNaN(newValue) || event.target.value === '') {\n            setPermissionsLevel(0);\n          } else {\n            setPermissionsLevel(newValue);\n          }\n    }\n\n    const changeAuthorityLevel =(event:any) => {\n      const newValue = Number(event.target.value);\n      if (isNaN(newValue) || event.target.value === '') {\n          setAuthorityLevel(0);\n        } else {\n          setAuthorityLevel(newValue);\n        }\n    }\n\n    const handleSelectUser = (index:number) => {\n        setIndex(index.toString())\n        setSelectedUser(allUser[index].username)\n    }\n\n    const handleSelectAuthorityUser = (index:number) => {\n        setAuthorityIndex(index.toString())\n        setSelectedAuthorityUser(allUser[index].username)\n    }\n\n    const submitPermissionsChange = (e:any) =>{\n      e.preventDefault()\n      changePermissionsApi()\n    }\n\n    const submitAuthorityChange = (e:any)=>{\n      e.preventDefault()\n      changeAuthoritysApi()\n    }\n\n    // const getUserApi = async () => {\n    //     const res = await fetch(`${api_server}/users/getUserById/${id}`)\n    //     return res\n    //   }\n\n    useEffect(()=>{\n      allUsersInfoApi()\n      // getUserApi()\n    },[])\n\n    useEffect(()=>{\n        setPermissionsLevel(allUser[parseInt(index)].permissionsLevel)\n        setAuthorityLevel(allUser[parseInt(index)].authorityLevel)\n    },[random])\n\n    useEffect(()=>{\n        setPermissionsLevel(allUser[parseInt(index)].permissionsLevel)\n    },[index])\n\n    useEffect(()=>{\n      setAuthorityLevel(allUser[parseInt(authorityIndex)].authorityLevel)\n    },[authorityIndex])\n\n  return (\n    <div style={{marginLeft:'20%'}}>\n        <h1>Admin Panel</h1>\n        {/* <button onClick={allUsersInfoApi}>check</button> */}\n        <form action=\"\" onSubmit={submitPermissionsChange}>\n          <span>Username: </span>\n            <select name=\"\" id=\"\" onChange={(e)=>handleSelectUser(parseInt(e.currentTarget.value))}>\n                {allUser.map((user:any,index)=>(\n                    <option value={index} key={user.id} >{user.username}</option>\n                ))}\n            </select>\n            <label htmlFor=\"\"> Permission Level :</label>\n            <input type=\"text\" value={permissionsLevel} onChange={(e)=> changePermissionsLevel(e)}/>\n            <input type=\"submit\"/>\n        </form>\n\n        <form action=\"\" onSubmit={submitAuthorityChange}>\n          <span>Username: </span>\n            <select name=\"\" id=\"\" onChange={(e)=>handleSelectAuthorityUser(parseInt(e.currentTarget.value))}>\n                {allUser.map((user:any,index)=>(\n                    <option value={index} key={user.id} >{user.username}</option>\n                ))}\n            </select>\n            <label htmlFor=\"\"> Authority Level  :</label>\n            <input type=\"text\" value={authorityLevel} onChange={(e)=> changeAuthorityLevel(e)}/>\n            <input type=\"submit\"/>\n        </form>\n    </div>\n  )\n}\n","/Users/cyrusyiu/new-WTW/WTW-Claims-Financial-System/Client/src/components/Login.tsx",["130"],[],"import React, { FormEvent, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { env } from \"../env\";\nimport { loginSuccess, logoutAction } from '../redux/auth/action';\nimport { IRootState } from '../redux/state';\n\nexport default function Login() {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const dispatch = useDispatch()\n\n    const isAuthenticated = useSelector(\n        (state: IRootState) => state.auth.isAuthenticated\n      );\n\n    const api_server = env.apiOrigin;\n\n      const loginApi = async () =>{\n        const res = await fetch(`${api_server}/users/login`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            // Authorization: `Bearer ${localStorage.getItem('token')}`\n          },\n          body: JSON.stringify({\n            username,\n            password,\n          }),\n        });\n        // return res;\n        const result = await res.json()\n        if(res.status === 200){\n          localStorage.setItem('token', result)\n        }else{\n            console.log(result.message)\n        }\n      }\n\n    const submitButton = (event: FormEvent) => {\n      event.preventDefault();\n      // let form = event.currentTarget as any\n      let user = {\n        username: username,\n        password: password,\n      };\n      console.log(username,password)\n      loginApi()\n      dispatch(loginSuccess())\n      // console.log(isAuthenticated)\n    };\n\n    const logoutButton = (event: FormEvent) => {\n      event.preventDefault();\n      localStorage.removeItem('token');\n      dispatch(logoutAction())\n    }\n\n  return (\n    <div style={{marginLeft:'20%'}}>\n        <h1>Login</h1>\n        {!isAuthenticated?\n                <form className=\"block\">\n                <label>Username:</label>\n                <input type=\"text\" className=\"border-2 block text-center\" value={username} onChange={(e) => setUsername(e.currentTarget.value)}></input>\n                <label>Password:</label>\n                <input type=\"text\" className=\"border-2 block text-center\" value={password} onChange={(e) => setPassword(e.currentTarget.value)}></input>\n                <input type=\"submit\" onClick={submitButton}/> \n            </form>\n            :\n            <button onClick={logoutButton}>Logout</button>\n            }\n\n        \n    </div>\n  )\n}\n","/Users/cyrusyiu/new-WTW/WTW-Claims-Financial-System/Client/src/env.ts",[],[],"/Users/cyrusyiu/new-WTW/WTW-Claims-Financial-System/Client/src/redux/auth/action.ts",[],[],"/Users/cyrusyiu/new-WTW/WTW-Claims-Financial-System/Client/src/components/PolicyList.tsx",["131","132"],[],"import React, { useEffect, useState } from 'react'\nimport { env } from \"../env\";\n\nexport default function PolicyList(props:any) {\n    const [policyId,setPolicyId] = useState('')\n    const [editMode,setEditMode] = useState(false) \n    const [policyNumber, setPolicyNumber] = useState(\"\");\n    const [policyType, setPolicyType] = useState('');\n    const [policyTerm, setPolicyTerm] = useState('');\n    const [coverageAmount, setCoverageAmount] = useState('');\n    const [premium, setPremium] = useState('');\n    const [index, setIndex] = useState('0')\n    const [random, setRandom] = useState(0)\n\n    const api_server = env.apiOrigin;\n\n    useEffect(()=>{\n        props.getAllPolicyApi()\n    },[])\n\n    useEffect(()=>{\n        setPolicyNumber(props.allPolicy[parseInt(index)].policy_number)\n        setPolicyType(props.allPolicy[parseInt(index)].policy_type)\n        setPolicyTerm(props.allPolicy[parseInt(index)].policy_term)\n        setCoverageAmount(props.allPolicy[parseInt(index)].coverage_amount)\n        setPremium(props.allPolicy[parseInt(index)].premium)\n        console.log('123',props.allPolicy)\n        console.log(index)\n    },[random])\n\n    const editPostApi = async (policyId:string) => {\n        const res = await fetch(`${api_server}/users/editPolicy`,{\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            // Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n          },\n          body: JSON.stringify({\n            policyId,\n            policyNumber,\n            policyType,\n            policyTerm,\n            coverageAmount,\n            premium,\n          }),\n        });\n        if(res.status === 200){\n            props.getAllPolicyApi()\n        }\n      }\n\n    const deletePostApi = async (policyId:string) => {\n        const res = await fetch(`${api_server}/users/deletePolicy`,{\n          method: \"DELETE\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            // Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n          },\n          body: JSON.stringify({\n            policyId: policyId,\n          }),\n        });\n        if(res.status === 200){\n            props.getAllPolicyApi()\n        }\n      }\n\n    const editPolicy = (policyId:string,index:number) => {\n        // editPostApi(policyId)\n        setEditMode(!editMode)\n        setPolicyId(policyId)\n        setIndex(index.toString())\n        setRandom(Math.random() * 1000)\n    }\n\n    const deletePolicy = (policyId:string,index:number) =>{\n        deletePostApi(policyId)\n    }\n\n    const handleSave = (e:any) => {\n        e.preventDefault()\n        setEditMode(!editMode)\n        editPostApi(policyId)\n    }\n\n  return (\n    <>\n    <h3>Policy List</h3>\n    <div style={{display:'flex',flexFlow:'wrap',marginLeft:'4%'}}>\n    {!editMode?\n        props.allPolicy.map((policy:any,index:number)=>(\n            <div key={policy.id}>\n                    <div style={{border:'solid 2px',marginLeft:'5px',marginRight:'2px',marginBottom:'5px',padding:'10px'}}>\n                        <div style={{textAlign:\"left\",marginBottom:'5px'}}>\n                            <div>Policy number: {policy.policy_number}</div>\n                            <div>Policy type: {policy.policy_type}</div>\n                            <div>PolicyTerm: {policy.policy_term}</div>\n                            <div>Coverage amount: {policy.coverage_amount}</div>\n                            <div>Premium: {policy.premium}</div>\n                        </div>\n                        <div>\n                        <button onClick={() => editPolicy(policy.id,index)}>Edit</button>\n                        <button onClick={() => deletePolicy(policy.id,index)}>Delete</button>\n                        </div>\n                    </div>\n            </div>\n        ))\n        :\n        <form onSubmit={handleSave} style={{border:'solid 2px',marginLeft:'2px',marginRight:'2px',marginBottom:'5px',padding:'10px'}}>\n            <label htmlFor=\"\">Policy number:</label>\n            <input type=\"text\" onChange={(e)=>setPolicyNumber(e.currentTarget.value)} value={policyNumber}/>\n            <label htmlFor=\"\">Policy type:</label>\n            <input type=\"text\" onChange={(e)=>setPolicyType(e.currentTarget.value)} value={policyType}/>\n            <label htmlFor=\"\">PolicyTerm:</label>\n            <input type=\"text\" onChange={(e)=>setPolicyTerm(e.currentTarget.value)} value={policyTerm}/>\n            <label htmlFor=\"\">Coverage amount:</label>\n            <input type=\"text\" onChange={(e)=>setCoverageAmount(e.currentTarget.value)} value={coverageAmount}/>\n            <label htmlFor=\"\" >Premium:</label>\n            <input type=\"text\" onChange={(e)=>setPremium(e.currentTarget.value)} value={premium}/>\n            <div>\n                <input type=\"submit\" />\n            </div>\n        </form> \n        }\n    </div>\n    </>\n  )\n}\n",{"ruleId":"133","severity":1,"message":"134","line":2,"column":8,"nodeType":"135","messageId":"136","endLine":2,"endColumn":12},{"ruleId":"133","severity":1,"message":"137","line":11,"column":8,"nodeType":"135","messageId":"136","endLine":11,"endColumn":18},{"ruleId":"133","severity":1,"message":"138","line":2,"column":8,"nodeType":"135","messageId":"136","endLine":2,"endColumn":13},{"ruleId":"133","severity":1,"message":"139","line":3,"column":8,"nodeType":"135","messageId":"136","endLine":3,"endColumn":13},{"ruleId":"133","severity":1,"message":"140","line":4,"column":8,"nodeType":"135","messageId":"136","endLine":4,"endColumn":14},{"ruleId":"133","severity":1,"message":"141","line":5,"column":8,"nodeType":"135","messageId":"136","endLine":5,"endColumn":16},{"ruleId":"133","severity":1,"message":"142","line":3,"column":17,"nodeType":"135","messageId":"136","endLine":3,"endColumn":30},{"ruleId":"133","severity":1,"message":"143","line":1,"column":10,"nodeType":"135","messageId":"136","endLine":1,"endColumn":21},{"ruleId":"133","severity":1,"message":"144","line":3,"column":26,"nodeType":"135","messageId":"136","endLine":3,"endColumn":35},{"ruleId":"133","severity":1,"message":"145","line":1,"column":28,"nodeType":"135","messageId":"136","endLine":1,"endColumn":38},{"ruleId":"133","severity":1,"message":"146","line":14,"column":13,"nodeType":"135","messageId":"136","endLine":14,"endColumn":17},{"ruleId":"133","severity":1,"message":"147","line":24,"column":11,"nodeType":"135","messageId":"136","endLine":24,"endColumn":23},{"ruleId":"133","severity":1,"message":"148","line":1,"column":17,"nodeType":"135","messageId":"136","endLine":1,"endColumn":25},{"ruleId":"133","severity":1,"message":"149","line":1,"column":17,"nodeType":"135","messageId":"136","endLine":1,"endColumn":29},{"ruleId":"133","severity":1,"message":"150","line":19,"column":9,"nodeType":"135","messageId":"136","endLine":19,"endColumn":11},{"ruleId":"151","severity":1,"message":"152","line":115,"column":7,"nodeType":"153","endLine":115,"endColumn":9,"suggestions":"154"},{"ruleId":"151","severity":1,"message":"155","line":120,"column":7,"nodeType":"153","endLine":120,"endColumn":15,"suggestions":"156"},{"ruleId":"151","severity":1,"message":"157","line":124,"column":7,"nodeType":"153","endLine":124,"endColumn":14,"suggestions":"158"},{"ruleId":"151","severity":1,"message":"159","line":128,"column":7,"nodeType":"153","endLine":128,"endColumn":23,"suggestions":"160"},{"ruleId":"133","severity":1,"message":"146","line":42,"column":11,"nodeType":"135","messageId":"136","endLine":42,"endColumn":15},{"ruleId":"151","severity":1,"message":"161","line":19,"column":7,"nodeType":"153","endLine":19,"endColumn":9,"suggestions":"162"},{"ruleId":"151","severity":1,"message":"163","line":29,"column":7,"nodeType":"153","endLine":29,"endColumn":15,"suggestions":"164"},"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'PolicyList' is defined but never used.","'Admin' is defined but never used.","'Login' is defined but never used.","'Policy' is defined but never used.","'Register' is defined but never used.","'ThunkDispatch' is defined but never used.","'unwatchFile' is defined but never used.","'useEffect' is defined but never used.","'useContext' is defined but never used.","'user' is assigned a value but never used.","'submitLogout' is assigned a value but never used.","'Children' is defined but never used.","'ReactElement' is defined but never used.","'id' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'allUsersInfoApi'. Either include it or remove the dependency array.","ArrayExpression",["165"],"React Hook useEffect has missing dependencies: 'allUser' and 'index'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setPermissionsLevel' needs the current value of 'allUser'.",["166"],"React Hook useEffect has a missing dependency: 'allUser'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setPermissionsLevel' needs the current value of 'allUser'.",["167"],"React Hook useEffect has a missing dependency: 'allUser'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setAuthorityLevel' needs the current value of 'allUser'.",["168"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["169"],"React Hook useEffect has missing dependencies: 'index' and 'props.allPolicy'. Either include them or remove the dependency array. If 'setPolicyNumber' needs the current value of 'props.allPolicy', you can also switch to useReducer instead of useState and read 'props.allPolicy' in the reducer.",["170"],{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},"Update the dependencies array to be: [allUsersInfoApi]",{"range":"183","text":"184"},"Update the dependencies array to be: [allUser, index, random]",{"range":"185","text":"186"},"Update the dependencies array to be: [allUser, index]",{"range":"187","text":"188"},"Update the dependencies array to be: [allUser, authorityIndex]",{"range":"189","text":"190"},"Update the dependencies array to be: [props]",{"range":"191","text":"192"},"Update the dependencies array to be: [index, props.allPolicy, random]",{"range":"193","text":"194"},[3565,3567],"[allUsersInfoApi]",[3734,3742],"[allUser, index, random]",[3842,3849],"[allUser, index]",[3952,3968],"[allUser, authorityIndex]",[692,694],"[props]",[1138,1146],"[index, props.allPolicy, random]"]